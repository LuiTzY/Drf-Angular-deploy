
services:

  frontend:
    container_name: frontend
    depends_on:
      - backend

    ports:
     - "80:80"
     - "443:443" #Colocar los puertos, no se si seran el 3000 o el 80 de nginx
      
    build: 
    #Falta crear el docker file
      context: ./frontend/
      dockerfile: Dockerfile

    extra_hosts:
      - "frontend:127.0.0.1"
    networks:
      - fullstack-net
  
  backend:
    container_name: backend
    depends_on:
      - db
    
    build: 
    #Falta crear el docker file
      context: ./backend/
      dockerfile: Dockerfile

    ports:
      - "${BACKEND_PORTS}:${BACKEND_PORTS}"
    networks:
      - fullstack-net
    
    environment:
      DATABASE_HOST_PROD: ${DATABASE_HOST_PROD}
      DATABASE_NAME_PROD: ${DATABASE_NAME_PROD}
      DATABASE_USER_PROD: ${DATABASE_USER_PROD}
      DATABASE_PASSWORD_PROD: ${DATABASE_PASSWORD_PROD}
      DATABASE_PORT_PROD: ${DATABASE_PASSWORD_PORT_PROD}  
      CORS_ALLOWED_ORIGINS_PROD: ${CORS_ALLOWED_ORIGINS_PROD}  
  db:
    #Usamos la version 8.0 para que sea compatible con el workbench
    image: mysql:8.0.41-oraclelinux9
    container_name: mysqldb
    ports:
         #Exponemos los puertos indicados en la config de la bd
      - "3307:3306"
    
    networks:
      - fullstack-net
    
    env_file:
      - path: ./backend/.env
        required: true
        
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}


networks:
  fullstack-net:
    driver: bridge